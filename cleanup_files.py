import os
from dotenv import load_dotenv

load_dotenv()

folder_to_cleanup = os.getenv("FOLDER_PATH")

def delete_non_lotr_yml_files(main_folder):
    """
    L√∂scht rekursiv alle .yml-Dateien in einem Ordner und dessen Unterordnern,
    deren Namen NICHT mit 'lotr_' beginnen.
    """
    files_to_delete = []

    # Schritt 1: Sicher alle zu l√∂schenden Dateien sammeln, ohne sie sofort zu l√∂schen.
    print("Suche nach zu l√∂schenden Dateien...")
    for root, _, files in os.walk(main_folder):
        for filename in files:
            # Pr√ºft, ob die Datei auf .yml endet UND NICHT mit lotr_ beginnt
            if filename.endswith(".yml") and not filename.startswith("lotr_"):
                filepath = os.path.join(root, filename)
                files_to_delete.append(filepath)

    if not files_to_delete:
        print("\n‚úÖ Keine .yml-Dateien gefunden, die den Kriterien entsprechen. Nichts zu tun.")
        return

    # Dem Benutzer genau zeigen, was gel√∂scht wird
    print("\nFolgende Dateien wurden zum L√∂schen markiert:")
    for filepath in files_to_delete:
        print(f"  - {filepath}")

    # Schritt 2: Eine explizite Sicherheitsabfrage
    print("\n---------------------------------------------------------")
    confirm = input(f"Bist du absolut sicher, dass du diese {len(files_to_delete)} Dateien endg√ºltig l√∂schen m√∂chtest? (ja/nein): ")
    print("---------------------------------------------------------")
    
    if confirm.lower() != 'ja':
        print("Aktion abgebrochen. Es wurden keine Dateien gel√∂scht.")
        return

    # Schritt 3: Die eigentliche L√∂schung durchf√ºhren
    deleted_count = 0
    print("\nL√∂sche Dateien...")
    for filepath in files_to_delete:
        try:
            os.remove(filepath)
            # print(f"  - Gel√∂scht: {filepath}") # Optional: F√ºr detailliertes Logging einkommentieren
            deleted_count += 1
        except Exception as e:
            print(f"  - üõë FEHLER beim L√∂schen von {filepath}: {e}")
    
    print(f"\n‚ú® Prozess abgeschlossen. {deleted_count} Dateien wurden gel√∂scht.")


if __name__ == '__main__':
    if not folder_to_cleanup or not os.path.isdir(folder_to_cleanup):
        print("üõë FEHLER: Bitte gib einen g√ºltigen Pfad zum Zielordner im Skript an.")
    else:
        delete_non_lotr_yml_files(folder_to_cleanup)